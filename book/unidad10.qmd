# Operaciones Básicas en Bases de Datos

## Introducción e Instalación

### Contenido:

En esta lección, nos centraremos en realizar operaciones básicas en bases de datos utilizando diferentes sistemas de gestión: MySQL, PostgreSQL y MongoDB. Aprenderemos cómo realizar la instalación de estos sistemas y cómo conectarnos a las bases de datos.

## Instalación de MySQL:

Descargar e instalar MySQL desde el sitio oficial.

Configurar contraseña para el usuario 'root'.

## Instalación de PostgreSQL:

Descargar e instalar PostgreSQL desde el sitio oficial.

Configurar contraseña para el usuario 'postgres'.

## Instalación de MongoDB:

Descargar e instalar MongoDB desde el sitio oficial.

Configurar directorio de datos y logs.

## Conexión a la Base de Datos:

### MySQL y PostgreSQL: 

Usar bibliotecas como mysql-connector-python o psycopg2 para conectarse y realizar operaciones.

### MongoDB: 

Usar la biblioteca pymongo para conectarse y realizar operaciones.

## Ejemplo - Conexión a MySQL:

```python
import mysql.connector

# Conexión a la base de datos
conn = mysql.connector.connect(
    host="localhost",
    user="root",
    password="contraseña",
    database="basededatos"
)
```

## Ejemplo - Conexión a MongoDB:

```python
import pymongo

# Conexión al servidor MongoDB
client = pymongo.MongoClient("mongodb://localhost:27017/")
```
:::{.callout-important}
### Actividad Práctica:

Instala MySQL, PostgreSQL y MongoDB en tu entorno.
Crea una base de datos en cada uno de los sistemas.
Conéctate a cada una de las bases de datos utilizando las bibliotecas adecuadas.
Realiza una consulta de prueba en cada sistema para verificar la conexión.
:::

## Explicación de la Actividad:

Esta actividad permite a los participantes adquirir experiencia práctica en la instalación de diferentes sistemas de bases de datos y en la conexión a estas bases de datos utilizando las bibliotecas correspondientes. Les ayuda a comprender cómo establecer una conexión exitosa y cómo preparar el entorno para las operaciones futuras en bases de datos.

## Bases de Datos en MySQL

### Contenido:

En esta lección, aprenderemos a realizar operaciones básicas en una base de datos MySQL, como crear y eliminar tablas, insertar registros y realizar consultas.

## Operaciones en MySQL:

### Crear una tabla: 
```sql
CREATE TABLE nombre (columna1 tipo, columna2 tipo);
```
### Insertar registros: 
```sql
INSERT INTO nombre (columna1, columna2) VALUES (valor1, valor2);
```
### Consultar registros: 
```sql
SELECT * FROM nombre;
```
### Actualizar registros: 
```sql
UPDATE nombre SET columna = valor WHERE condicion;
```
### Eliminar registros: 
```sql
DELETE FROM nombre WHERE condicion;
```
### Eliminar tabla: 
```sql
DROP TABLE nombre;
```

## Ejemplo - Creación de una Tabla en MySQL:

```sql
CREATE TABLE empleados (
    id INT PRIMARY KEY,
    nombre VARCHAR(100),
    salario DECIMAL(10, 2)
);
```
:::{.callout-important}
### Actividad Práctica:

Conéctate a la base de datos MySQL.

Crea una tabla 'productos' con las columnas 'id', 'nombre' y 'precio'.

Inserta al menos dos registros en la tabla 'productos'.

Realiza una consulta para obtener todos los registros de la tabla 'productos'.
:::

## Explicación de la Actividad:

Esta actividad permite a los participantes aplicar los conocimientos adquiridos en la creación de tablas, inserción de registros y consultas en una base de datos MySQL. Les ayuda a ganar experiencia práctica en la manipulación de datos utilizando SQL en MySQL.

## Crear y Eliminar Tablas en PostgreSQL

### Contenido:

En esta lección, aprenderemos a realizar operaciones básicas en una base de datos PostgreSQL, como crear y eliminar tablas, insertar registros y realizar consultas.

## Operaciones en PostgreSQL:

### Crear una tabla: 
```sql
CREATE TABLE nombre (columna1 tipo, columna2 tipo);
```
### Insertar registros: 
```sql
INSERT INTO nombre (columna1, columna2) VALUES (valor1, valor2);
```
### Consultar registros: 
```sql
SELECT * FROM nombre;
```
### Actualizar registros: 
```sql
UPDATE nombre SET columna = valor WHERE condicion;
```
### Eliminar registros: 
```sql
DELETE FROM nombre WHERE condicion;
```
### Eliminar tabla: 
```sql
DROP TABLE nombre;
```

## Ejemplo - Creación de una Tabla en PostgreSQL:

```sql
CREATE TABLE empleados (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    salario DECIMAL(10, 2)
);
```
:::{.callout-important}
### Actividad Práctica

## Conéctate a la base de datos PostgreSQL.

Crea una tabla 'clientes' con las columnas 'id', 'nombre' y 'email'.

Inserta al menos dos registros en la tabla 'clientes'.

Realiza una consulta para obtener todos los registros de la tabla 'clientes'.
:::

## Explicación de la Actividad:

Esta actividad permite a los participantes aplicar los conocimientos adquiridos en la creación de tablas, inserción de registros y consultas en una base de datos PostgreSQL. Les ayuda a ganar experiencia práctica en la manipulación de datos utilizando SQL en PostgreSQL.

## Operaciones Básicas en MongoDB

### Contenido:

En esta lección, aprenderemos a realizar operaciones básicas en una base de datos MongoDB, como insertar documentos, consultar documentos y actualizar documentos.

## Operaciones en MongoDB:

### Insertar documentos: 
```nosql
db.coleccion.insert({ campo1: valor1, campo2: valor2 });
```
### Consultar documentos: 
```nosql
db.coleccion.find();
```
### Actualizar documentos: 
```nosql
db.coleccion.update({ campo: valor }, { $set: { campo_actualizado: nuevo_valor } });
```
### Eliminar documentos: 
```nosql
db.coleccion.remove({ campo: valor });
```
## Ejemplo - Inserción de un Documento en MongoDB:

```nosql	
// Insertar un documento en la colección 'productos'
db.productos.insert({ nombre: "Camiseta", precio: 20 });
```

:::{.callout-important}
### Actividad Práctica:

Conéctate a la base de datos MongoDB.

Inserta al menos dos documentos en la colección 'productos'.

Realiza una consulta para obtener todos los documentos de la colección 'productos'.

Actualiza el precio de uno de los documentos en la colección.

Elimina un documento de la colección.
:::

## Explicación de la Actividad:

Esta actividad permite a los participantes aplicar los conocimientos adquiridos en la inserción, consulta, actualización y eliminación de documentos en una base de datos MongoDB. Les ayuda a ganar experiencia práctica en la manipulación de datos en una base de datos NoSQL.