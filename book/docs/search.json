[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Curso de Python 2023",
    "section": "",
    "text": "Bienvenida\n¡Bienvenidos al Curso Completo de Python: Desde Fundamentos hasta Aplicaciones Prácticas!"
  },
  {
    "objectID": "index.html#qué-es-este-curso",
    "href": "index.html#qué-es-este-curso",
    "title": "Curso de Python 2023",
    "section": "¿Qué es este Curso?",
    "text": "¿Qué es este Curso?\nEste curso exhaustivo te llevará desde los fundamentos básicos de la programación hasta la creación de aplicaciones prácticas utilizando el lenguaje de programación Python. A través de una combinación de teoría y ejercicios prácticos, te sumergirás en los conceptos esenciales de la programación y avanzarás hacia la construcción de proyectos reales. Desde la instalación de herramientas hasta la creación de una API con Django Rest Framework, este curso te proporcionará una comprensión sólida y práctica de Python y su aplicación en el mundo real."
  },
  {
    "objectID": "index.html#a-quién-está-dirigido",
    "href": "index.html#a-quién-está-dirigido",
    "title": "Curso de Python 2023",
    "section": "¿A quién está dirigido?",
    "text": "¿A quién está dirigido?\nEste curso está diseñado para principiantes y aquellos con poca o ninguna experiencia en programación. No importa si eres un estudiante curioso, un profesional que busca cambiar de carrera o simplemente alguien que desea aprender a programar: este curso es para ti. Desde adolescentes hasta adultos, todos son bienvenidos a participar y explorar el emocionante mundo de la programación a través de Python."
  },
  {
    "objectID": "index.html#cómo-contribuir",
    "href": "index.html#cómo-contribuir",
    "title": "Curso de Python 2023",
    "section": "¿Cómo contribuir?",
    "text": "¿Cómo contribuir?\nValoramos tu participación en este curso. Si encuentras errores, deseas sugerir mejoras o agregar contenido adicional, ¡nos encantaría escucharte! Puedes contribuir a través de nuestra plataforma en línea, donde puedes compartir tus comentarios y sugerencias. Juntos, podemos mejorar continuamente este recurso educativo para beneficiar a la comunidad de estudiantes y entusiastas de la programación.\nEste libro ha sido creado con el objetivo de brindar acceso gratuito y universal al conocimiento. Estará disponible en línea para que cualquiera, sin importar su ubicación o circunstancias, pueda acceder y aprender a su propio ritmo.\n¡Esperamos que disfrutes este emocionante viaje de aprendizaje y descubrimiento en el mundo de la programación con Python!"
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#conceptos-clave",
    "href": "unidades/unidad1/unidad1.html#conceptos-clave",
    "title": "Introducción general a la Programación",
    "section": "Conceptos Clave",
    "text": "Conceptos Clave\n\nInstrucciones\nSon comandos específicos que le indican a la computadora qué hacer. Pueden ser simples, como imprimir un mensaje en pantalla, o complejas, como realizar cálculos matemáticos.\n\n\nLenguajes de Programación\nSon sistemas de comunicación entre humanos y máquinas. Cada lenguaje tiene reglas sintácticas y semánticas que determinan cómo se escriben y ejecutan las instrucciones.\n\n\nAlgoritmos\nSon conjuntos ordenados de instrucciones diseñados para resolver un problema específico. Los algoritmos son la base de la programación y se utilizan para desarrollar software eficiente.\n\n\nDepuración\nEs el proceso de identificar y corregir errores en el código. Los programadores pasan tiempo depurando para asegurarse de que sus programas funcionen correctamente."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#ejemplo",
    "href": "unidades/unidad1/unidad1.html#ejemplo",
    "title": "Introducción general a la Programación",
    "section": "Ejemplo:",
    "text": "Ejemplo:\n1print(\"Hola, bienvenido al mundo de la programación.\")\n\n1\n\nEste es un ejemplo sencillo de un programa en Python que imprime un mensaje en pantalla."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#explicación",
    "href": "unidades/unidad1/unidad1.html#explicación",
    "title": "Introducción general a la Programación",
    "section": "Explicación",
    "text": "Explicación\nEn Python, los comentarios comienzan con el símbolo #. No afectan la ejecución del programa, pero son útiles para documentar el código.\nLa línea print(\"Hola, bienvenido al mundo de la programación.\") es una instrucción de impresión. La función print() muestra el texto entre paréntesis en la consola.\n\n\n\n\n\n\nActividad Práctica\n\n\n\nEscribe un programa que solicite al usuario su nombre y luego imprima un mensaje de bienvenida personalizado."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#explicación-de-la-actividad",
    "href": "unidades/unidad1/unidad1.html#explicación-de-la-actividad",
    "title": "Introducción general a la Programación",
    "section": "Explicación de la Actividad",
    "text": "Explicación de la Actividad\n======= ## Introducción general a la Programación\nLa programación es el proceso de crear secuencias de instrucciones que le indican a una computadora cómo realizar una tarea específica.\nEstas instrucciones se escriben en lenguajes de programación, que son conjuntos de reglas y símbolos utilizados para comunicarse con la máquina. La programación es una habilidad esencial en la era digital, ya que se aplica en una amplia variedad de campos, desde desarrollo de software y análisis de datos hasta diseño de juegos y automatización."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#conceptos-clave-1",
    "href": "unidades/unidad1/unidad1.html#conceptos-clave-1",
    "title": "Introducción general a la Programación",
    "section": "Conceptos Clave",
    "text": "Conceptos Clave\n\nInstrucciones\nSon comandos específicos que le indican a la computadora qué hacer. Pueden ser simples, como imprimir un mensaje en pantalla, o complejas, como realizar cálculos matemáticos.\n\n\nLenguajes de Programación\nSon sistemas de comunicación entre humanos y máquinas. Cada lenguaje tiene reglas sintácticas y semánticas que determinan cómo se escriben y ejecutan las instrucciones.\n\n\nAlgoritmos\nSon conjuntos ordenados de instrucciones diseñados para resolver un problema específico. Los algoritmos son la base de la programación y se utilizan para desarrollar software eficiente.\n\n\nDepuración\nEs el proceso de identificar y corregir errores en el código. Los programadores pasan tiempo depurando para asegurarse de que sus programas funcionen correctamente."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#ejemplo-1",
    "href": "unidades/unidad1/unidad1.html#ejemplo-1",
    "title": "Introducción general a la Programación",
    "section": "Ejemplo:",
    "text": "Ejemplo:\n1print(\"Hola, bienvenido al mundo de la programación.\")\n\n1\n\nEste es un ejemplo sencillo de un programa en Python que imprime un mensaje en pantalla."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#explicación-1",
    "href": "unidades/unidad1/unidad1.html#explicación-1",
    "title": "Introducción general a la Programación",
    "section": "Explicación",
    "text": "Explicación\nEn Python, los comentarios comienzan con el símbolo #. No afectan la ejecución del programa, pero son útiles para documentar el código.\nLa línea print(\"Hola, bienvenido al mundo de la programación.\") es una instrucción de impresión. La función print() muestra el texto entre paréntesis en la consola.\n\n\n\n\n\n\nActividad Práctica\n\n\n\nEscribe un programa que solicite al usuario su nombre y luego imprima un mensaje de bienvenida personalizado."
  },
  {
    "objectID": "unidades/unidad1/unidad1.html#explicación-de-la-actividad-1",
    "href": "unidades/unidad1/unidad1.html#explicación-de-la-actividad-1",
    "title": "Introducción general a la Programación",
    "section": "Explicación de la Actividad",
    "text": "Explicación de la Actividad\n\n\n\n\n\n\n\ne8ed08b1a5bbe1e369719187cfc4de7f7e2a41a9 El programa utilizará la función input() para recibir la entrada del usuario. Luego, utilizará la entrada proporcionada para imprimir un mensaje de bienvenida personalizado."
  },
  {
    "objectID": "unidades/unidad2/unidad2.html#conceptos-clave",
    "href": "unidades/unidad2/unidad2.html#conceptos-clave",
    "title": "Instalación de Python",
    "section": "Conceptos Clave",
    "text": "Conceptos Clave\n\nPython\nLenguaje de programación de alto nivel que se utiliza para desarrollar aplicaciones web, científicas, de automatización y más.\n\n\nInterprete\nPython es un lenguaje interpretado, lo que significa que se ejecuta línea por línea en tiempo real.\n\n\nIDE\nLos entornos de desarrollo integrados (IDE) como Visual Studio Code (VS Code) o PyCharm brindan herramientas para escribir, depurar y ejecutar código de manera más eficiente."
  },
  {
    "objectID": "unidades/unidad2/unidad2.html#ejemplo",
    "href": "unidades/unidad2/unidad2.html#ejemplo",
    "title": "Instalación de Python",
    "section": "Ejemplo",
    "text": "Ejemplo\nNo se necesita código para esta lección, ya que se trata de instrucciones para la instalación de Python en diferentes sistemas operativos."
  },
  {
    "objectID": "unidades/unidad2/unidad2.html#explicación",
    "href": "unidades/unidad2/unidad2.html#explicación",
    "title": "Instalación de Python",
    "section": "Explicación",
    "text": "Explicación\nPara instalar Python en sistemas Windows, macOS y Linux, se pueden seguir las instrucciones detalladas proporcionadas en el sitio web oficial de Python www.python.org/downloads/.\nLa instalación de Python generalmente incluye el intérprete de Python y una serie de herramientas y bibliotecas estándar que hacen que sea fácil comenzar a programar.\n\n\n\n\n\n\nActividad Práctica\n\n\n\nInstala Python en tu sistema operativo siguiendo las instrucciones del sitio web oficial de Python. Luego, verifica que Python esté correctamente instalado ejecutando el intérprete y escribiendo el siguiente código:\nprint(\"Python se ha instalado correctamente.\")"
  },
  {
    "objectID": "unidades/unidad2/unidad2.html#explicación-de-la-actividad",
    "href": "unidades/unidad2/unidad2.html#explicación-de-la-actividad",
    "title": "Instalación de Python",
    "section": "Explicación de la Actividad",
    "text": "Explicación de la Actividad\nEsta actividad permite a los participantes aplicar lo aprendido instalando Python en su propio sistema y ejecutando un programa sencillo para confirmar que la instalación fue exitosa."
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#qué-se-necesita-conocer",
    "href": "unidades/unidad12/unidad12.html#qué-se-necesita-conocer",
    "title": "Explicación del Proyecto",
    "section": "Qué se necesita conocer:",
    "text": "Qué se necesita conocer:\n\nConocimientos básicos de Python.\nFamiliaridad con Django y Django Rest Framework.\nEntorno de desarrollo configurado con Django y Django Rest Framework."
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#estructura-del-proyecto",
    "href": "unidades/unidad12/unidad12.html#estructura-del-proyecto",
    "title": "Explicación del Proyecto",
    "section": "Estructura del Proyecto:",
    "text": "Estructura del Proyecto:\nproyecto_api_tareas/\n├── api_tareas/\n│   ├── migrations/\n│   ├── templates/\n│   ├── __init__.py\n│   ├── admin.py\n│   ├── apps.py\n│   ├── models.py\n│   ├── serializers.py\n│   ├── tests.py\n│   └── views.py\n├── proyecto_api_tareas/\n│   ├── __init__.py\n│   ├── asgi.py\n│   ├── settings.py\n│   ├── urls.py\n│   └── wsgi.py\n├── db.sqlite3\n└── manage.py"
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#código",
    "href": "unidades/unidad12/unidad12.html#código",
    "title": "Explicación del Proyecto",
    "section": "Código:",
    "text": "Código:\n#models.py:\nfrom django.db import models\n\nclass Tarea(models.Model):\n    titulo = models.CharField(max_length=100)\n    descripcion = models.TextField()\n    fecha_creacion = models.DateTimeField(auto_now_add=True)\n    completada = models.BooleanField(default=False)\n\n    def __str__(self):\n        return self.titulo\n#serializers.py:\n\nfrom rest_framework import serializers\nfrom .models import Tarea\n\nclass TareaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tarea\n        fields = '__all__'\n#views.py:\nfrom rest_framework import viewsets\nfrom .models import Tarea\nfrom .serializers import TareaSerializer\n\nclass TareaViewSet(viewsets.ModelViewSet):\n    queryset = Tarea.objects.all()\n    serializer_class = TareaSerializer\n\n    urls.py (api_tareas):\nfrom rest_framework.routers import DefaultRouter\nfrom .views import TareaViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'tareas', TareaViewSet)\n\nurlpatterns = router.urls\nA continuación en el archivo settings.py agregar ‘rest_framework’ y ‘api_tareas’ en INSTALLED_APPS.\n\n\n\n\n\n\nActividad Práctica:\n\n\n\nConfigura un proyecto Django y una aplicación llamada ‘api_tareas’.\nDefine el modelo Tarea en models.py con los campos necesarios.\nCrea un serializador en serializers.py para el modelo Tarea.\nImplementa las vistas en views.py utilizando Django Rest Framework.\nConfigura las URLs en urls.py para las vistas de la API.\nMigrar y ejecutar el servidor para probar la API utilizando el navegador o herramientas como Postman."
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#explicación-de-la-actividad",
    "href": "unidades/unidad12/unidad12.html#explicación-de-la-actividad",
    "title": "Explicación del Proyecto",
    "section": "Explicación de la Actividad:",
    "text": "Explicación de la Actividad:\n======= ## Explicación del Proyecto\nEn este proyecto, construiremos una API utilizando Django Rest Framework para gestionar tareas. La API permitirá a los usuarios crear, actualizar, listar y eliminar tareas. Utilizaremos Django Rest Framework para definir los modelos, las vistas y las URL necesarias para interactuar con la API."
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#qué-se-necesita-conocer-1",
    "href": "unidades/unidad12/unidad12.html#qué-se-necesita-conocer-1",
    "title": "Explicación del Proyecto",
    "section": "Qué se necesita conocer:",
    "text": "Qué se necesita conocer:\n\nConocimientos básicos de Python.\nFamiliaridad con Django y Django Rest Framework.\nEntorno de desarrollo configurado con Django y Django Rest Framework."
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#estructura-del-proyecto-1",
    "href": "unidades/unidad12/unidad12.html#estructura-del-proyecto-1",
    "title": "Explicación del Proyecto",
    "section": "Estructura del Proyecto:",
    "text": "Estructura del Proyecto:\nproyecto_api_tareas/\n├── api_tareas/\n│   ├── migrations/\n│   ├── templates/\n│   ├── __init__.py\n│   ├── admin.py\n│   ├── apps.py\n│   ├── models.py\n│   ├── serializers.py\n│   ├── tests.py\n│   └── views.py\n├── proyecto_api_tareas/\n│   ├── __init__.py\n│   ├── asgi.py\n│   ├── settings.py\n│   ├── urls.py\n│   └── wsgi.py\n├── db.sqlite3\n└── manage.py"
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#código-1",
    "href": "unidades/unidad12/unidad12.html#código-1",
    "title": "Explicación del Proyecto",
    "section": "Código:",
    "text": "Código:\n#models.py:\nfrom django.db import models\n\nclass Tarea(models.Model):\n    titulo = models.CharField(max_length=100)\n    descripcion = models.TextField()\n    fecha_creacion = models.DateTimeField(auto_now_add=True)\n    completada = models.BooleanField(default=False)\n\n    def __str__(self):\n        return self.titulo\n#serializers.py:\n\nfrom rest_framework import serializers\nfrom .models import Tarea\n\nclass TareaSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tarea\n        fields = '__all__'\n#views.py:\nfrom rest_framework import viewsets\nfrom .models import Tarea\nfrom .serializers import TareaSerializer\n\nclass TareaViewSet(viewsets.ModelViewSet):\n    queryset = Tarea.objects.all()\n    serializer_class = TareaSerializer\n\n    urls.py (api_tareas):\nfrom rest_framework.routers import DefaultRouter\nfrom .views import TareaViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'tareas', TareaViewSet)\n\nurlpatterns = router.urls\nA continuación en el archivo settings.py agregar ‘rest_framework’ y ‘api_tareas’ en INSTALLED_APPS.\n\n\n\n\n\n\nActividad Práctica:\n\n\n\nConfigura un proyecto Django y una aplicación llamada ‘api_tareas’.\nDefine el modelo Tarea en models.py con los campos necesarios.\nCrea un serializador en serializers.py para el modelo Tarea.\nImplementa las vistas en views.py utilizando Django Rest Framework.\nConfigura las URLs en urls.py para las vistas de la API.\nMigrar y ejecutar el servidor para probar la API utilizando el navegador o herramientas como Postman."
  },
  {
    "objectID": "unidades/unidad12/unidad12.html#explicación-de-la-actividad-1",
    "href": "unidades/unidad12/unidad12.html#explicación-de-la-actividad-1",
    "title": "Explicación del Proyecto",
    "section": "Explicación de la Actividad:",
    "text": "Explicación de la Actividad:\n\n\n\n\n\n\n\ne8ed08b1a5bbe1e369719187cfc4de7f7e2a41a9 Este proyecto permite a los participantes aplicar los conocimientos adquiridos en Django y Django Rest Framework para crear una API de gestión de tareas. Aprenden cómo definir modelos, serializadores, vistas y URLs en Django Rest Framework para construir una API completa. Les ayuda a comprender cómo desarrollar aplicaciones web con APIs utilizando tecnologías modernas."
  },
  {
    "objectID": "unidades/ejercicios/ejercicio1.html",
    "href": "unidades/ejercicios/ejercicio1.html",
    "title": "Ejercicio 1:",
    "section": "",
    "text": "&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n¿Cómo se define una variable en Python?\n\n\nRespuesta:\n\nSe define una variable en Python asignándole un nombre y un valor. Por ejemplo:\nnombre = \"Juan\"\n======= ## Ejercicio 1:\n¿Cómo se define una variable en Python?\n\n\nRespuesta:\n\nSe define una variable en Python asignándole un nombre y un valor. Por ejemplo:\nnombre = \"Juan\"\n\n\n\n\n\n\n\ne8ed08b1a5bbe1e369719187cfc4de7f7e2a41a9"
  }
]