# Herencia de Plantillas y Bootstrap en Django

En esta lección, aprenderemos cómo utilizar la herencia de plantillas en Django para crear un diseño consistente en nuestras páginas web y cómo integrar Bootstrap para mejorar la apariencia de la interfaz de usuario.

## Conceptos Clave

### Herencia de Plantillas

La herencia de plantillas en Django permite definir una plantilla base con elementos comunes y extenderla para crear plantillas específicas para cada página.

### Bootstrap.

![](images/bootstrap.png){fig-align="center" width="300"}

Bootstrap es un marco de diseño de código abierto que proporciona estilos y componentes predefinidos para mejorar la apariencia y la usabilidad de un sitio web.

**Ejemplo**

```html
# Plantilla base llamada "base.html"
<!DOCTYPE html>
<html>
<head>
    <title>{% block title %}Mi Sitio Web{% endblock %}</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>Mi Sitio Web</h1>
        </header>
        <nav>
            <ul class="nav">
                <li class="nav-item"><a class="nav-link" href="/">Inicio</a></li>
                <li class="nav-item"><a class="nav-link" href="/tareas/">Tareas</a></li>
            </ul>
        </nav>
        <main>
            {% block content %}{% endblock %}
        </main>
    </div>
</body>
</html>
```
```html
# Plantilla para la página de inicio que hereda de "base.html"
{% extends "base.html" %}

{% block title %}Inicio - Mi Sitio Web{% endblock %}

{% block content %}
    <h2>Bienvenido a la página de inicio</h2>
    <p>Esta es la página de inicio de mi sitio web.</p>
{% endblock %}
```
### Explicación

En este ejemplo, hemos creado una plantilla base llamada **base.html** que define la estructura común de todas las páginas. Luego, creamos una plantilla específica para la página de inicio que hereda de **base.html**. Utilizamos Bootstrap para mejorar el aspecto de la página.

:::{.callout-tip}
### Actividad Práctica

1.  Crea una plantilla base llamada **base_notas.html** que incluya un menú de navegación y un pie de página.
2.  Crea una plantilla específica llamada **lista_notas.html** que herede de **base_notas.html** y muestre una lista de notas utilizando Bootstrap.
:::

<details>

<summary>Solucion</summary>

**Resumen**:

En esta actividad práctica, se creará una plantilla base llamada "base_notas.html" que contendrá un menú de navegación y un pie de página. Luego, se creará una plantilla específica llamada "lista_notas.html" que heredará de "base_notas.html" y mostrará una lista de notas utilizando Bootstrap.

**Código**:

1.  Crear la Plantilla Base "base_notas.html":

En la carpeta de plantillas de tu aplicación ("articulos" en este ejemplo), crea un archivo llamado "base_notas.html" con el siguiente contenido:

``` html

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Título por Defecto{% endblock %}</title>
    <!-- Agregar enlaces a Bootstrap y otros recursos aquí -->
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Mi Aplicación de Notas</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Inicio <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Notas</a>
                </li>
                <!-- Agregar más elementos de menú si es necesario -->
            </ul>
        </div>
    </nav>

    <div class="container">
        {% block content %}{% endblock %}
    </div>

    <footer class="footer mt-auto py-3">
        <div class="container">
            <span class="text-muted">© 2023 Mi Aplicación de Notas</span>
        </div>
    </footer>
    <!-- Agregar enlaces a Bootstrap y otros recursos aquí -->
</body>
</html>
```

2.  Crear la Plantilla Específica "lista_notas.html":

Crea un archivo llamado "lista_notas.html" en la misma carpeta de plantillas de tu aplicación ("articulos" en este ejemplo). Esta plantilla heredará de "base_notas.html" y mostrará una lista de notas utilizando Bootstrap:

``` html
{% extends "base_notas.html" %}

{% block title %}Lista de Notas{% endblock %}

{% block content %}
    <h1>Lista de Notas</h1>
    <ul class="list-group">
        {% for nota in notas %}
            <li class="list-group-item">{{ nota.titulo }}</li>
            <p class="list-group-item">{{ nota.contenido }}</p>
        {% endfor %}
    </ul>
{% endblock %}
```

**Explicación**:

1.  Hemos creado una plantilla base llamada "base_notas.html" que incluye un menú de navegación en la parte superior y un pie de página en la parte inferior. Esta plantilla utiliza Bootstrap para el estilo del menú y el pie de página.

2.  Luego, hemos creado una plantilla específica llamada "lista_notas.html" que hereda de "base_notas.html" utilizando {% extends "base_notas.html" %}. Esto significa que "lista_notas.html" incluirá todo el contenido de "base_notas.html."

3.  En "lista_notas.html," hemos definido bloques {% block ... %} para personalizar el título de la página ("Lista de Notas") y el contenido de la lista de notas. Dentro del bloque de contenido, iteramos sobre las notas y las mostramos utilizando clases de Bootstrap para dar formato a la lista.

Con estos pasos, hemos creado una plantilla base reutilizable ("base_notas.html") y una plantilla específica ("lista_notas.html") que hereda de la base y muestra una lista de notas con estilo Bootstrap. Esto facilitará la creación de páginas similares en tu aplicación Django.

</details>

## ¿Qué aprendimos?

Aprendimos cómo utilizar la herencia de plantillas en Django para crear un diseño consistente en nuestras páginas web y cómo integrar Bootstrap para mejorar la apariencia de la interfaz de usuario.