# Creando Nuestro Primer Módulo

En esta lección, aprenderemos a crear nuestro propio módulo en Python, lo que nos permitirá organizar y reutilizar código de manera efectiva. Crearemos un módulo que contendrá funciones y clases para realizar operaciones matemáticas básicas.

## Pasos para Crear un Módulo:

- Crea un archivo de Python con la extensión .py.
- Define funciones y/o clases en el archivo.
- Guarda el archivo en una ubicación accesible.

**Ejemplo**:

```python
# operaciones.py

def suma(a, b):
    return a + b

def resta(a, b):
    return a - b

class Calculadora:
    def multiplicacion(self, a, b):
        return a * b
## Creando Nuestro Primer Módulo
```
En esta lección, aprenderemos a crear nuestro propio módulo en Python. Crearemos un módulo que contenga funciones y clases para realizar operaciones matemáticas básicas.

## Pasos para Crear un Módulo:

1. Crea un archivo de Python con la extensión .py.

2. Define funciones y clases en el archivo.

3. Guarda el archivo en una ubicación accesible.

## Ejemplo:

```python
# En el archivo operaciones.py
def suma(a, b):
    return a + b

def resta(a, b):
    return a - b

class Calculadora:
    def multiplicacion(self, a, b):
        return a * b
```
## Explicación:

En este ejemplo, se crea un módulo llamado operaciones.py.

Se define una función suma y una función resta, junto con una clase Calculadora que tiene un método multiplicacion.

:::{.callout-tip}

### Actividad Práctica:

1. Crea un módulo llamado geometria con funciones para calcular el área de un círculo y el perímetro de un cuadrado.
2. En otro archivo, importa el módulo geometria y utiliza las funciones para realizar cálculos geométricos.
:::

## Explicación de la Actividad:

Esta actividad permite a los participantes practicar la creación de módulos con funciones y clases. Les ayuda a comprender cómo organizar diferentes funcionalidades en módulos separados y cómo importar esas funcionalidades en otros archivos.

En este ejemplo, creamos un módulo llamado operaciones.py. Dentro de este módulo, definimos dos funciones, suma y resta, que realizan operaciones matemáticas básicas. También creamos una clase Calculadora con un método multiplicacion para llevar a cabo multiplicaciones.

:::{.callout-tip}

## Actividad Práctica:

Crea un módulo llamado geometria con funciones para calcular el área de un círculo y el perímetro de un cuadrado.

:::

### Explicación:

Esta actividad te permitirá practicar la creación de módulos con funciones. Debes crear un módulo llamado geometria.py que contenga dos funciones: una para calcular el área de un círculo y otra para calcular el perímetro de un cuadrado. Luego, importa este módulo en otro archivo y utiliza las funciones para realizar cálculos geométricos.

<details>
    <summary>Solución</summary>

La solución a la actividad práctica implica crear el módulo geometria.py con las funciones calcular_area_circulo y calcular_perimetro_cuadrado. Luego, importa este módulo en otro archivo y utiliza las funciones para realizar cálculos geométricos.

```python
# geometria.py

import math

def calcular_area_circulo(radio):
    return math.pi * radio**2

def calcular_perimetro_cuadrado(lado):
    return 4 * lado
```
```python
# archivo_principal.py

import geometria

radio_circulo = 5
lado_cuadrado = 4

area = geometria.calcular_area_circulo(radio_circulo)
perimetro = geometria.calcular_perimetro_cuadrado(lado_cuadrado)

print(f"Área del círculo: {area}")
print(f"Perímetro del cuadrado: {perimetro}")
```
Explicación paso a paso de la Solución:

1. Creamos el módulo geometria.py que contiene dos funciones, calcular_area_circulo y calcular_perimetro_cuadrado, para calcular el área de un círculo y el perímetro de un cuadrado, respectivamente.
2. En el archivo principal (archivo_principal.py), importamos el módulo geometria.
3. Definimos valores para el radio de un círculo (radio_circulo) y el lado de un cuadrado (lado_cuadrado).
4. Utilizamos las funciones del módulo geometria para calcular el área del círculo y el perímetro del cuadrado.
5. Imprimimos los resultados de los cálculos.

## ¿Qué Aprendimos?

En esta lección, aprendimos a crear nuestro propio módulo en Python y cómo organizar funciones y clases en él. También practicamos la importación de módulos en otros archivos y cómo utilizar las funcionalidades proporcionadas por esos módulos. La creación de módulos es una técnica fundamental para mantener nuestro código organizado y promover la reutilización de código.