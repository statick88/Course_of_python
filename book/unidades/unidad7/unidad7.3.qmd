## Métodos

En esta lección, profundizaremos en el concepto de métodos en la programación orientada a objetos. Aprenderemos cómo definir y utilizar métodos en una clase, y cómo acceder a los atributos de instancia dentro de los métodos.
Métodos de Clase

Los métodos de clase son funciones definidas dentro de una clase que operan en los atributos de instancia. Cada instancia de la clase puede llamar a estos métodos para realizar acciones específicas.

**Ejemplo**:

```python
class Cuadrado:
    def __init__(self, lado):
        self.lado = lado

    def calcular_area(self):
        area = self.lado ** 2
        return area

# Crear una instancia de Cuadrado
cuadrado1 = Cuadrado(4)

# Calcular y mostrar el área del cuadrado
area_cuadrado = cuadrado1.calcular_area()
print(f"Área del Cuadrado: {area_cuadrado}")
```

En este ejemplo, hemos definido una clase "Cuadrado" con un método **"calcular_area"**. El método accede al atributo de instancia **"lado"** utilizando "self.lado" y calcula el área del cuadrado.

### Acceso a Atributos

Dentro de un método, se puede acceder a los atributos de instancia utilizando **"self.atributo"**. Esto permite manipular y utilizar los valores de los atributos dentro de los métodos.

**Ejemplo**:

```python
class Persona:
    def __init__(self, nombre, edad):
        self.nombre = nombre
        self.edad = edad

    def saludar(self):
        print(f"Hola, soy {self.nombre} y tengo {self.edad} años.")

# Crear una instancia de Persona
persona1 = Persona("Ana", 30)

# Llamar al método saludar para mostrar un saludo personalizado
persona1.saludar()
```

En este ejemplo, el método **"saludar"** accede a los atributos de instancia **"nombre"** y "edad" utilizando "self.nombre" y **"self.edad"** para mostrar un saludo personalizado.

:::{.callout-tip}
### Actividad Práctica:

Crea una clase Triángulo con atributos "base" y "altura", y un método "calcular_area" que calcule y retorne el área del triángulo (base * altura / 2).
:::

<details>
<sumary>Ejemplo de Clase Triángulo</sumary>

**Resumen**:

En esta actividad, crearemos una clase llamada **"Triángulo"** con atributos **"base"** y **"altura"**. Implementaremos un método llamado "calcular_area" que calculará y retornará el área del triángulo (base * altura / 2). Luego, crearemos una instancia de la clase **"Triángulo"** con dimensiones específicas y mostraremos el área del triángulo.

**Resolución**:

```python
class Triangulo:
    def __init__(self, base, altura):
        self.base = base
        self.altura = altura

    def calcular_area(self):
        return (self.base * self.altura) / 2

# Crear una instancia de Triángulo
triangulo1 = Triangulo(6, 8)

# Calcular el área del triángulo
area_triangulo = triangulo1.calcular_area()

# Mostrar el área del triángulo
print(f"Área del Triángulo: {area_triangulo}")
```
**Explicación**:

- Definimos la clase "Triángulo" con un constructor __init__ que toma dos argumentos: "base" y "altura". Estos argumentos se utilizan para inicializar los atributos de instancia "base" y "altura".

- Implementamos un método de instancia llamado "calcular_area" que calcula el área del triángulo utilizando la fórmula (base * altura) / 2 y lo retorna.

- Creamos una instancia de la clase "Triángulo" con dimensiones específicas (base 6 y altura 8).

- Calculamos el área del triángulo llamando al método "calcular_area" en la instancia.

- Mostramos el área del triángulo en la consola.
</details>

### Explicación

Esta actividad te permite practicar la definición y uso de métodos en una clase y cómo acceder a los atributos de instancia dentro de los métodos.