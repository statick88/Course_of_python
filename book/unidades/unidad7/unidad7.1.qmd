## Introducción

En esta lección, exploraremos el concepto de programación orientada a objetos (POO). Aprenderemos sobre objetos, clases y cómo la POO nos permite organizar y estructurar nuestro código de manera más eficiente.

## Conceptos Clave:

### Programación Orientada a Objetos (POO)

Paradigma de programación que se basa en el uso de objetos y clases.

### Objetos

Instancias de clases que representan entidades en el mundo real.

### Clases

Plantillas o moldes que definen la estructura y el comportamiento de los objetos.

### Atributos

Características o propiedades de un objeto.

### Métodos

Funciones que definen el comportamiento de un objeto.

## Ejemplo:

```python
class Persona:
    def __init__(self, nombre, edad):
        self.nombre = nombre
        self.edad = edad

    def saludar(self):
        print(f"Hola, mi nombre es {self.nombre} y tengo {self.edad} años.")

persona1 = Persona("Juan", 25)
persona1.saludar()
```

## Explicación:

En este ejemplo, se define una clase llamada Persona con un constructor (__init__) que inicializa atributos.

La clase tiene un método llamado saludar que muestra un mensaje con el nombre y edad del objeto.

::: {.callout-important}
### Actividad Práctica:

Crea una clase llamada Libro con atributos titulo y autor, y un método mostrar_info que imprima los atributos.

Crea una instancia de la clase Libro y llama al método mostrar_info.
:::

## Explicación de la Actividad:
Esta actividad permite a los participantes practicar la definición de clases y la creación de objetos. Les ayuda a comprender cómo la POO nos permite modelar entidades y organizar el código de manera más estructurada y eficiente.

