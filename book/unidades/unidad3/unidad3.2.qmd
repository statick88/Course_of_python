# Listas y Tuplas

![](images/list.png){fig-align="center" width="400"}

## Conceptos Clave

### Listas

![](images/vocales.png){fig-align="center" width="400"}

Las listas son secuencias ordenadas de elementos que pueden ser de diferentes tipos. Permiten almacenar varios elementos en una sola variable.

### Tuplas

![](images/tuple.png){fig-align="center" width="400"}

Las tuplas son similares a las listas, pero son inmutables, lo que significa que no se pueden modificar después de ser creadas.

## Ejemplo

```python
# Listas
frutas = ["manzana", "banana", "naranja", "uva"]
primer_fruta = frutas[0]
segunda_fruta = frutas[1]

# Tuplas
coordenadas = (3, 5)
x = coordenadas[0]
y = coordenadas[1]
```
### Explicación:

En este ejemplo, se crea una lista de frutas y una tupla de coordenadas. Se accede a elementos individuales de la lista y la tupla utilizando índices.

Los índices comienzan desde 0, por lo que la primera fruta tiene el índice 0.

:::{.callout-tip}

### Actividad Práctica (Listas):

1. Crea una lista con los nombres de tus tres películas favoritas.
2. Accede al segundo elemento de la lista e imprímelo en la consola.
:::

### Explicación:

Esta actividad permite a los participantes practicar la creación de listas y el acceso a elementos utilizando índices. Les ayuda a comprender cómo organizar y acceder a múltiples elementos en una sola variable.

:::{.callout-tip}

### Actividad Práctica (Tuplas):

1. Crea una tupla con las estaciones del año.
2. Intenta modificar un elemento de la tupla y observa el error que se produce.
:::

### Explicación:

Esta actividad permite a los participantes practicar la creación de tuplas y comprender la diferencia entre listas y tuplas en términos de inmutabilidad. Les ayuda a comprender cómo utilizar tuplas cuando necesitan almacenar datos que no deben cambiar.

## ¿Qué Aprendimos?

En esta lección, aprendimos sobre dos tipos de estructuras de datos en Python: listas y tuplas.

**Listas**: Son secuencias ordenadas de elementos que pueden modificarse. Se accede a los elementos utilizando índices.

**Tuplas**: Son similares a las listas, pero son inmutables, lo que significa que no pueden modificarse después de su creación. También se accede a los elementos utilizando índices.

Estas estructuras nos permiten almacenar y organizar datos de manera eficiente en Python, y la elección entre listas y tuplas depende de si necesitamos datos modificables o inmutables en nuestros programas.